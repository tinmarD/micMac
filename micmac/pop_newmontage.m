function [VI, ALLWIN, ALLSIG] = pop_newmontage (VI, ALLWIN, ALLSIG)
%[VI, ALLWIN, ALLSIG] = POP_NEWMONTAGE (VI, ALLWIN, ALLSIG)
%   Popup window to create a new signal with a new montage from an existing
%   raw signal. 

[SigCont,~,~,~,sigdesc] = getsignal (ALLSIG, 'type', 'continuous');
if isempty(SigCont)
    msgbox ('You need to load a signal first');
    return;
end

montagesStr         = vi_defaultval('montages');
electrodeTypesStr   = vi_defaultval('electrode_types');
avgEstimation       = {'mean','median'};

cb_sigchanged   = [
    'SigCont        = getsignal(ALLSIG,''type'',''continuous'');',...
    'sigind             = get(findobj(gcbf,''tag'',''rawsigs''),''value'');',...
    'elTypes            = vi_defaultval(''electrode_types'');',...
    'elType             = elTypes(get(findobj(gcbf,''tag'',''eltypepop''),''value''));',...
    '[outMontStr,inMontPos] = getpossiblemontages(SigCont(sigind),elType,SigCont(sigind).montage);',...
    'set(findobj(gcbf,''tag'',''inMontPop''),''Value'',inMontPos);',...
    'if ~isempty(outMontStr);',...
    'set(findobj(gcbf,''tag'',''outMontPop''),''String'',outMontStr);',...
    'set(findobj(gcbf,''tag'',''outMontPop''),''enable'',''on'');',...
    'else;',...
    'set(findobj(gcbf,''tag'',''outMontPop''),''enable'',''off'');',...
    'end;',...
    ];

cb_inmontchanged = [
    'montagesStr= vi_defaultval(''montages'');',...
    'inMontPos  = get(findobj(gcbf,''tag'',''inMontPop''),''Value'');',...
    'inMont     = montagesStr{inMontPos};',...
    'elTypes  	= vi_defaultval(''electrode_types'');',...
    'elType    	= elTypes(get(findobj(gcbf,''tag'',''eltypepop''),''value''));',...
    '[outMontStr,inMontPos] = getpossiblemontages([],elType,inMont);',...
    'if ~isempty(outMontStr);',...
    'set(findobj(gcbf,''tag'',''outMontPop''),''String'',outMontStr);',...
    'set(findobj(gcbf,''tag'',''outMontPop''),''enable'',''on'');',...
    'if ismember(outMontStr,{''average'',''electrode-average''});',...
    'set(findobj(gcbf,''tag'',''avgEstText''),''visible'',''on'');',...
    'set(findobj(gcbf,''tag'',''avgEstPop''),''visible'',''on'');',...
    'else;',...
    'set(findobj(gcbf,''tag'',''avgEstText''),''visible'',''off'');',...
    'set(findobj(gcbf,''tag'',''avgEstPop''),''visible'',''off'');',...
    'end;',...
    'else;',...
    'set(findobj(gcbf,''tag'',''outMontPop''),''enable'',''off'');',...
    'end;',...
    ];

cb_outmontchanged = [
    'outMontPos = get(findobj(gcbf,''tag'',''outMontPop''),''value'');',...
    'outMonts   = getpossiblemontages();',...
    'if isempty(outMonts); return; end;',...
    'outMont 	= outMonts{outMontPos};',...
    'if ismember(outMont,{''average'',''electrode-average''});',...
    'set(findobj(gcbf,''tag'',''avgEstText''),''visible'',''on'');',...
    'set(findobj(gcbf,''tag'',''avgEstPop''),''visible'',''on'');',...
    'else;',...
    'set(findobj(gcbf,''tag'',''avgEstText''),''visible'',''off'');',...
    'set(findobj(gcbf,''tag'',''avgEstPop''),''visible'',''off'');',...
    'end;',...
];

cb_winchanged = [
    'winstr = get(findobj(gcbf,''tag'',''winsel''),''String'');',...
    'winsel = winstr{get(findobj(gcbf,''tag'',''winsel''),''Value'')};',...
    'newpossel = (length(ALLWIN(str2double(winsel)).views)+1);',...                    
    'set(findobj(gcbf,''tag'',''possel''),''String'',num2str(newpossel));'];

[outMontStr,inMontPos]  = getpossiblemontages(SigCont(1),'depth',SigCont(1).montage);
if ismember(outMontStr,{'average','electrode-average'}); avgVisible='on'; else; avgVisible='off'; end;

windowsnb   = cell(1,VI.nwin);
position    = length(ALLWIN(end).views)+1;
for w=1:VI.nwin; windowsnb{w}=w; end;

geometry = {[1,1],[1,1],[1,1],[1],[1,1],[1,1],1,[1,1],[1,1,1,1]};
uilist   = {...
    {'Style','text','String','Raw signal :'},...
    {'Style','popupmenu','String',sigdesc,'tag','rawsigs','Callback',cb_sigchanged},...
    {'Style','text','String','Electrode type :'},...
    {'Style','popupmenu','String',electrodeTypesStr,'tag','eltypepop'},...
    {'Style','text','String','Input montage :'},...
    {'Style','popupmenu','String',montagesStr,'value',inMontPos,'tag','inMontPop','Callback',cb_inmontchanged},...
    {},...
    {'Style','text','String','Output montage :'},...
    {'Style','popupmenu','String',outMontStr,'tag','outMontPop','Callback',cb_outmontchanged},...
    {'Style','text','String','Average Estimation :','visible',avgVisible,'tag','avgEstText'},...
    {'Style','popupmenu','String',avgEstimation,'visible',avgVisible,'tag','avgEstPop'},...    
    {},...
    {'Style','text','String','Add view'},...
    {'Style','checkbox','Value',1},...
    {'Style','text','String','Window'},...
    {'Style','popupmenu','String',windowsnb,'Value',length(windowsnb),'tag','winsel','Callback',cb_winchanged},...
    {'Style','text','String','Position'},...
    {'Style','edit','String',num2str(position),'tag','possel'},...

    };

results = inputgui (geometry, uilist, 'title', 'New montage');

if ~isempty(results)
    sigPos      = results{1};
    elTypePos   = results{2};
    inMontPos   = results{3};
    outMontPos  = results{4};
    elType      = electrodeTypesStr{elTypePos};
    inMont      = montagesStr{inMontPos};
    outMonts    = getpossiblemontages([],elType,inMont);
    outMont     = outMonts(outMontPos);
    avgMethod   = avgEstimation{results{5}};
    
    dispinfo('Creating new montage...');
    if strcmp(inMont,'monopolar')
        %- Check that montage is monopolar 
        if ~isempty(regexp(SigCont(sigPos).channames{find(SigCont(sigPos).eegchannelind,1)},'-','once'))
            msgbox('Signal seems to have a bipolar montage. Make sure there is no "-" in the channel names.','Re-referencing error');
            dispinfo('');
            return;
        end
        if strcmp(outMont,'bipolar')
            [VI, ALLWIN, ALLSIG, sigid] = newmontage_mono2bi(VI, ALLWIN, ALLSIG, SigCont(sigPos));
        elseif strcmp(outMont,'average');
            [VI, ALLWIN, ALLSIG, sigid] = newmontage_mono2avg(VI, ALLWIN, ALLSIG, SigCont(sigPos),avgMethod);
        elseif strcmp(outMont,'electrode-average')
            [VI, ALLWIN, ALLSIG, sigid] = newmontage_mono2elecavg(VI, ALLWIN, ALLSIG, SigCont(sigPos),avgMethod);
        end
    else
        msgbox('Not implemented yet...');
        return;        
    end
    
    % Add a view if asked, keep the same gain as the temporal view with signal Sig (if found)
    if results{end-2}
        sigView                 = getview(ALLWIN,'sigid',ALLSIG(sigPos).id,'domain','t');
        if ~isempty(sigView); 
            viewGain = sigView(1).gain;
            [VI, ALLWIN, ALLSIG]    = addview (VI, ALLWIN, ALLSIG, results{end-1},sigid,'t',str2double(results{end}),[],viewGain);
        else
            [VI, ALLWIN, ALLSIG]    = addview (VI, ALLWIN, ALLSIG, results{end-1},sigid,'t',str2double(results{end}));
        end
    end
    dispinfo('');
end

end